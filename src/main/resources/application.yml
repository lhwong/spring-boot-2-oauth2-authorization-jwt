server:
  port: 9999
  servlet.context-path: /uaa
spring:
  datasource:
    url: jdbc:mysql://${db.host:localhost}:${db.port:3306}/${db.name:spring-boot-2-oauth2-authorization-jwt}?useSSL=false
    username: ${db.uid:root}
    password: ${db.pwd:password}
    driver-class-name: com.mysql.jdbc.Driver
    tomcat:
      test-while-idle: true
      validation-query: SELECT 1
    initialization-mode: never
    platform: mysql
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5Dialect
    hibernate:
      naming:
        physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
      ddl-auto: validate
check-user-scopes: false
logging:
  level:
    org.springframework.security: DEBUG
  file: c:/var/spring-boot-2-oauth-jwt.log
  
#security:
#  oauth2:
#    client:
#      client-id: acme
#      client-secret: acmesecret
#      scope: can_read_user
#      auto-approve-scopes: '.*'
      
github:
  client:
    clientId: a19290d4de4dd9b0138f
    clientSecret: 191ab8b51e811d427a5a25ff55aa95432812f89b
    accessTokenUri: https://github.com/login/oauth/access_token
    userAuthorizationUri: https://github.com/login/oauth/authorize
    clientAuthenticationScheme: form
  resource:
    userInfoUri: https://api.github.com/user
    
oauth2-vanilla:
  client:
    accessTokenUri: http://127.0.0.1:9991/uaa/oauth/token
    userAuthorizationUri: http://127.0.0.1:9991/uaa/oauth/authorize
    clientId: acme
    clientSecret: acmesecret
  resource:
    userInfoUri: http://127.0.0.1:9991/uaa/user     